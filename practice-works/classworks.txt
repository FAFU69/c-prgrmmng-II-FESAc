
15) 

Implementa una de las siguientes funciones en un archivo de no mas de 30 lineas de codigo.

		fputs
		fwrite
		fprintf
		
	y usa, al menos, una de las siguientes funciones:
		fgetc
		fgets
		fread

14) Realice una investigación de la función getline(a,b,c) (será necesario implementar un apuntador) 
    e implemente un ejemplo con un archivo externo. No olvide subir el código y un archivo PDF explicando 
    lo investigado.
13) Usa el codigo partII/Ejer13-desviacionEstandar.c de tal forma que use apuntadores y al menos tres funciones de memoria 
dinamica. El codigo debe calucular la desviacion estandar y escribir el significado.
12) Escriba un programa que incluya un define N (igual al número que usted desee); 
    dentro de la funcion principal declare una variable-arreglo de tipo char de 
    tamaño N y luego declare una función que calculará la longitud de una cadena. 
    Es importante que use la función gets() para capturar la información del arreglo.
    Luego intercambie información de una cadena por terminal y llamar una función 
    definida por el usuario. El argumento de dicha función debe ser una variable-
    arreglo de tipo char y dentro, usando el identificador del apuntador, debe 
    realizar el conteo de los caracteres de la cadena dada.  
11) Escriba un programa que analice una linea de texto y calcule el numero de vocales, 
    consonantes, caracteres y espacios en blancos; y los muestre en pantalla. 
    Debe usar funcion con argumentos de diferente tipo de variables apuntador para 
    realizar este trabajo. Use while e if-else.
************************************************************************************************************************
10) Escriba un programa que tenga una funcion con argumentos 
    de variables apuntadores y no apuntadores para realizar intercambio 
    de información y que calcule un sueldo más algunos beneficios de un trabajador 
    de una empresa.    
9) Realice un programa que implemente una funcion para que, usando paso por referencia 
   con un argumento apuntador, tomando un valor por consola, calcule el cubo de un numero.

8) Escriba un programa, que implemente punteros, que capture una temperatura y que 
   muestre la temperatura en diferentes sistemas de unidades.

7) Realiza el mismo programa anterior (6), usando funciones implementada por el usuario 
   donde el argumento sea un puntero.
6) Escriba un programa que implemente apuntadores para realizar la suma, la resta, división y multiplicación 
   de tres variables de tipo entero y que imprima la dirección de memoria de cada resultado.
 
************************************************************************************************************************
5) Realiza un documento donde escribas las diferencias o cualidades entre los tipos de variables union, struct y typedef. 
    No olvides colocarlo en tu repositorio de tareas y agregar los archivos fuente.
4) Realiza un programa que implemente la palabra typedef para capturar, al menos, tres datos de diferente tipo para 
    los estudiantes del curso y que al final los muestre en pantalla (implementa un for).

3) En las variables de tipo union solamente podemos acceder en uno de sus miembros cada vez. Para demostrar esta aseveración, 
    realiza un programa que contenga una variable de tipo union para almacenar los datos de un estudiante, por ejemplo.  
2) Realiza un programa que calcule el tamaño de una variable de tipo estructura y de una variable de tipo union que sean iguales.
1) Modifica el programa partI/10estruc.c para que tome dos numero complejos y le realice las operaciones suma, resta y 
    multiplicación; además que calcule el módulo de cada uno de los números complejos ingresados. Implementa funciones 
    creadas por el usuario.
*************************************************************************************************************************
Este texto no contiene acentos (puede que haya puesto algunos).
